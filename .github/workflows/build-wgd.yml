name: Docker publish WGDashboard

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Where are we deploying?"
        required: true
        default: "dev"
      version:
        description: "Image version"
        required: false

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  IMAGE_NAME: wgdashboard

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: |
            - linux/amd64
            - linux/arm64
            - linux/arm/v7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment based on branch
        id: env
        run: |
          if [ "${GITHUB_REF_NAME}" = "main" ]; then
            echo "environment=main" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

      - name: Define image tags
        id: tags
        run: |
          if [ "${{ steps.env.outputs.environment }}" = "main" ]; then
            echo "tags=${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
            if [ -n "${{ github.event.inputs.version }}" ]; then
              echo "tags=${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            fi
          else
            echo "tags=${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:dev" >> $GITHUB_OUTPUT
          fi

      - name: Build and push WGDashboard image
        uses: docker/build-push-action@v6
        with:
          context: ./wgdashboard
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.tags.outputs.tags }}

  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Pull Docker Image from GitHub Packages
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.ref_name == 'main' && 'latest' || 'dev' }}

      - name: Run Docker Scout Vulnerability Scan
        uses: docker/scout-action@v1
        id: docker-scout-cves
        with:
          command: cves,recommendations
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.ref_name == 'main' && 'latest' || 'dev' }}
          sarif-file: sarif.output.json
          summary: true

      - name: Upload Scan Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vulnerability-scan-report
          path: sarif.output.json
